<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Swadhin-PC" ignored="6" name="Test" tests="6" failures="1" timestamp="07 Jul 2019 08:26:29 GMT" time="142.683" errors="0">
  <testcase name="LoginPageFlow" time="27.305" classname="tests.LoginPageTest"/>
  <testcase name="LoginPageFlow" time="55.802" classname="tests.LoginPageTest">
    <failure type="org.openqa.selenium.NoSuchElementException" message="Can&amp;apos;t locate an element by this strategy: By.chained({By.id: main_search_icon})">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.id: main_search_icon})
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.isDisplayed(<generated>)
at pageObjects.loginPage.Login(loginPage.java:57)
at tests.LoginPageTest.LoginPageFlow(LoginPageTest.java:34)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@6187d1f5 (tried for 1 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:304)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
... 29 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.id: main_search_icon})
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SWADHIN-PC', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_101'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 31 more
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- LoginPageFlow -->
  <testcase name="LoginPageVerification" time="11.281" classname="tests.LoginPageTest"/>
  <testcase name="SkipLoginVerification" time="11.621" classname="tests.SkipLoginPageTest"/>
  <testcase name="SignUpPageVerification" time="12.429" classname="tests.SignUpPageTest"/>
  <testcase name="ForgotPasswordVerification" time="13.787" classname="tests.ForgotPasswordPageTest"/>
  <testcase name="@AfterTest killServer" time="0.0" classname="tests.BaseClass">
    <ignored/>
  </testcase> <!-- @AfterTest killServer -->
  <testcase name="@AfterTest killServer" time="0.0" classname="tests.BaseClass">
    <ignored/>
  </testcase> <!-- @AfterTest killServer -->
  <testcase name="@AfterTest killServer" time="0.0" classname="tests.BaseClass">
    <ignored/>
  </testcase> <!-- @AfterTest killServer -->
  <testcase name="@BeforeTest startServer" time="0.0" classname="tests.BaseClass">
    <ignored/>
  </testcase> <!-- @BeforeTest startServer -->
  <testcase name="@BeforeTest startServer" time="0.0" classname="tests.BaseClass">
    <ignored/>
  </testcase> <!-- @BeforeTest startServer -->
  <testcase name="@BeforeTest startServer" time="0.0" classname="tests.BaseClass">
    <ignored/>
  </testcase> <!-- @BeforeTest startServer -->
</testsuite> <!-- Test -->
